/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package project;

import DAO.LOPDSSVDAO;
import DAO.SVDAO;
import DAO.TKBDAO;
import entities.CSV;
import entities.LopDssv;
import entities.LopDssvId;
import entities.SinhVien;
import entities.Tkb;
import entities.TkbId;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Long
 */
public class giaovu extends javax.swing.JFrame {

    /**
     * Creates new form giaovu
     */
    public giaovu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Import_DSSV = new javax.swing.JButton();
        addSV = new javax.swing.JButton();
        Import_TKB = new javax.swing.JButton();
        DK_Button = new javax.swing.JButton();
        Huy_Button = new javax.swing.JButton();
        DSLop_Button = new javax.swing.JButton();
        DS_LopMon = new javax.swing.JButton();
        TKB = new javax.swing.JButton();
        Import_Diem = new javax.swing.JButton();
        Diem_Button = new javax.swing.JButton();
        SuaDiem_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GIÁO VỤ");

        Import_DSSV.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Import_DSSV.setText("Import DSSV");
        Import_DSSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Import_DSSVMouseClicked(evt);
            }
        });

        addSV.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        addSV.setText("Thêm SV");
        addSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addSVMouseClicked(evt);
            }
        });

        Import_TKB.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Import_TKB.setText("Import TKB");
        Import_TKB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Import_TKBMouseClicked(evt);
            }
        });

        DK_Button.setText("Đăng Ký Môn");
        DK_Button.setToolTipText("");
        DK_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DK_ButtonMouseClicked(evt);
            }
        });

        Huy_Button.setText("Hủy Môn");
        Huy_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Huy_ButtonMouseClicked(evt);
            }
        });

        DSLop_Button.setText("Xem DS Lớp");
        DSLop_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DSLop_ButtonMouseClicked(evt);
            }
        });

        DS_LopMon.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        DS_LopMon.setText("DS Lớp-Môn");
        DS_LopMon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DS_LopMonMouseClicked(evt);
            }
        });

        TKB.setText("Xem TKB");
        TKB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TKBMouseClicked(evt);
            }
        });

        Import_Diem.setText("Import Điểm");
        Import_Diem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Import_DiemMouseClicked(evt);
            }
        });

        Diem_Button.setText("Xem Điểm");
        Diem_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Diem_ButtonMouseClicked(evt);
            }
        });

        SuaDiem_Button.setText("Sửa Điểm");
        SuaDiem_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuaDiem_ButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Import_DSSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Import_TKB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DK_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Huy_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DSLop_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DS_LopMon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TKB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Import_Diem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Diem_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SuaDiem_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Import_DSSV)
                    .addComponent(DS_LopMon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSV)
                    .addComponent(TKB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Import_TKB)
                    .addComponent(Import_Diem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DK_Button)
                    .addComponent(Diem_Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Huy_Button)
                    .addComponent(SuaDiem_Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DSLop_Button)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Import_DSSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Import_DSSVMouseClicked
       String Malop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP",1);
       String diachi=JOptionPane.showInputDialog(this,"File csv: ","NHẬP ĐỊA CHỈ FILE DSSV",1);
       
       Vector<SinhVien>  a=new Vector<SinhVien>();
       CSV csv =new CSV();
       if (Malop !=null && diachi !=null)
       {
            a=csv.readCsvFileDSSV(diachi);
            for (int i=0;i<a.size();i++)
            {
                a.get(i).setMalop(Malop);
                SVDAO svdao=new SVDAO();
                boolean kq = svdao.themSV(a.get(i));
            }
       }
    }//GEN-LAST:event_Import_DSSVMouseClicked

    private void addSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addSVMouseClicked
        String Malop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP SINH VIÊN",1);
        String Mssv=JOptionPane.showInputDialog(this,"MSSV: ","NHẬP SINH VIÊN",1);
        String Name=JOptionPane.showInputDialog(this,"TÊN: ","NHẬP SINH VIÊN",1);
        String Cmnd=JOptionPane.showInputDialog(this,"CMND: ","NHẬP SINH VIÊN",1);
        Object[] selections={"Nam","Nữ"};
        Object Sx=JOptionPane.showInputDialog(this,"GIỚI TÍNH:","NHẬP SINH VIÊN",1,null,selections,selections[0]);
        String Sex = null;
        if (Sx != null)
            Sex=Sx.toString();
        SinhVien st=new SinhVien();
        if (Malop !=null && Mssv !=null && Name !=null && Cmnd !=null && Sex!=null)
        {
            st.setMalop(Malop);
            st.setMssv(Mssv);
            st.setName(Name);
            st.setCmnd(Cmnd);
            st.setSex(Sex);
            SVDAO svdao=new SVDAO();
           boolean kq = svdao.themSV(st);
           JOptionPane.showMessageDialog(this, "THÊM SV THÀNH CÔNG");
        }
        else JOptionPane.showMessageDialog(this, "THÊM SV THẤT BẠI");
 
    }//GEN-LAST:event_addSVMouseClicked

    private void Import_TKBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Import_TKBMouseClicked
       String Malop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP TKB",1);
       String diachi=JOptionPane.showInputDialog(this,"File csv: ","NHẬP ĐỊA CHỈ FILE TKB",1);
       Vector<Tkb>  a=new Vector<Tkb>();
       CSV csv =new CSV();
       if (Malop !=null && diachi !=null)
       {
            a=csv.readCsvFileTKB(diachi);
            for (int i=0;i<a.size();i++)
            {
                a.get(i).getId().setMalop(Malop);
                TKBDAO tkbdao=new TKBDAO();
                boolean kq = tkbdao.themTKB(a.get(i));
            }
            SVDAO svdao=new SVDAO();
            List<SinhVien> dssv= svdao.layDSSV_MaLop(Malop);
            for (int i=0;i<a.size();i++)
            {
                for(int j=0;j<dssv.size();j++)
                {
                    LopDssvId id=new LopDssvId(Malop,a.get(i).getId().getMamon(),dssv.get(j).getMssv());
                    LopDssv lopdssv=new LopDssv(id);
                    LOPDSSVDAO lopdssvdao=new LOPDSSVDAO();
                    boolean kq= lopdssvdao.themLOPDSSV(lopdssv);
                }
            }
       }
    }//GEN-LAST:event_Import_TKBMouseClicked

    private void DK_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DK_ButtonMouseClicked
        String MSSV=JOptionPane.showInputDialog(this,"MSSV: ","NHẬP MSSV",1);
        if (SVDAO.find(MSSV)!=null)
        {
            String MaLop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP:",1);
            String MaMon=JOptionPane.showInputDialog(this,"MÔN: ","NHẬP MÃ MÔN:",1);
            TkbId id=new TkbId(MaLop,MaMon);
            if (TKBDAO.find(id)!=null)
            {
                LopDssvId lopdssvid=new LopDssvId(MaLop,MaMon,MSSV);
                LopDssv lopdssv=new LopDssv(lopdssvid);
                LOPDSSVDAO lopdssvdao=new LOPDSSVDAO();
                boolean kq= lopdssvdao.themLOPDSSV(lopdssv);
                JOptionPane.showMessageDialog(this, "Đăng ký thành công","THÔNG BÁO",1);
            }
            else
                JOptionPane.showMessageDialog(this, "Lớp không tồn tại","LỖI",2);
        }
        else
            JOptionPane.showMessageDialog(this, "MSSV không tồn tại","LỖI",2);

    }//GEN-LAST:event_DK_ButtonMouseClicked

    private void Huy_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Huy_ButtonMouseClicked
        String MSSV=JOptionPane.showInputDialog(this,"MSSV: ","NHẬP MSSV",1);
        if (SVDAO.find(MSSV)!=null)
        {
            String MaLop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP:",1);
            String MaMon=JOptionPane.showInputDialog(this,"MÔN: ","NHẬP MÃ MÔN:",1);
            LopDssvId lopdssvid=new LopDssvId(MaLop,MaMon,MSSV);
            if (LOPDSSVDAO.find(lopdssvid)!=null)
            {
                LOPDSSVDAO lopdssvdao=new LOPDSSVDAO();
                boolean kq= lopdssvdao.xoaLOPDSSV(lopdssvid);
                JOptionPane.showMessageDialog(this, "Hủy thành công","THÔNG BÁO",1);
            }
            else
                JOptionPane.showMessageDialog(this, "Sinh viên hiện không đăng ký lớp này","LỖI",2);
        }
        else
            JOptionPane.showMessageDialog(this, "MSSV không tồn tại","LỖI",2);
    }//GEN-LAST:event_Huy_ButtonMouseClicked

    private void DSLop_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DSLop_ButtonMouseClicked
        String MaLop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP:",1);
        DSLOP dslop=new DSLOP(MaLop);
        dslop.setVisible(true);
    }//GEN-LAST:event_DSLop_ButtonMouseClicked

    private void DS_LopMonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DS_LopMonMouseClicked
        String MaLop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP:",1);
        String MaMon=JOptionPane.showInputDialog(this,"MÃ MÔN: ","NHẬP MÃ MÔN:",1);
        TkbId id=new TkbId(MaLop,MaMon);
        if (TKBDAO.find(id)!=null)
        {
            DSLOP dslop=new DSLOP(MaLop,MaMon);
            dslop.setVisible(true);
        }
        else JOptionPane.showMessageDialog(this, "LỚP KHÔNG TỒN TẠI","LỖI",2);
         
    }//GEN-LAST:event_DS_LopMonMouseClicked

    private void TKBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TKBMouseClicked
        String MaLop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP:",1);
        List<Tkb> ds=TKBDAO.layTKB_MaLop(MaLop);
        if (ds.isEmpty()!=true)
        {
            TKB tkb=new TKB(MaLop,ds);
            tkb.setVisible(true);
            
        }
        else JOptionPane.showMessageDialog(this, "MÃ LỚP KHÔNG TỒN TẠI","LỖI",2);
    }//GEN-LAST:event_TKBMouseClicked

    private void Import_DiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Import_DiemMouseClicked
        String MaLop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP:",1);
        String MaMon=JOptionPane.showInputDialog(this,"MÃ MÔN: ","NHẬP MÃ MÔN:",1);
        TkbId id=new TkbId(MaLop,MaMon);
        if (TKBDAO.find(id)!=null)
        {
            String diachi=JOptionPane.showInputDialog(this,"File csv: ","NHẬP ĐỊA CHỈ FILE ĐIỂM",1);
            CSV csv =new CSV();
            Vector<LopDssv> a=new Vector<LopDssv>();
            a=csv.readCsvFileDiem(diachi,MaLop,MaMon);
            for (LopDssv ds:a)
            {
                LOPDSSVDAO lopdssvdao=new LOPDSSVDAO();
                boolean kq=lopdssvdao.updateLOPDSSV(ds);
            }
        }
        else JOptionPane.showMessageDialog(this, "LỚP KHÔNG TỒN TẠI","LỖI",2);
    }//GEN-LAST:event_Import_DiemMouseClicked

    private void Diem_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Diem_ButtonMouseClicked
        String MaLop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP:",1);
        String MaMon=JOptionPane.showInputDialog(this,"MÃ MÔN: ","NHẬP MÃ MÔN:",1);
        TkbId id=new TkbId(MaLop,MaMon);
        if (TKBDAO.find(id)!=null)
        {
            BANGDIEM bangdiem=new BANGDIEM(MaLop,MaMon);
            bangdiem.setVisible(true);
        }
        else JOptionPane.showMessageDialog(this, "LỚP KHÔNG TỒN TẠI","LỖI",2);
    }//GEN-LAST:event_Diem_ButtonMouseClicked

    private void SuaDiem_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuaDiem_ButtonMouseClicked
        String MaLop=JOptionPane.showInputDialog(this,"LỚP: ","NHẬP MÃ LỚP:",1);
        String MaMon=JOptionPane.showInputDialog(this,"MÃ MÔN: ","NHẬP MÃ MÔN:",1);
        TkbId id=new TkbId(MaLop,MaMon);
        if (TKBDAO.find(id)!=null)
        {
            String MSSV=JOptionPane.showInputDialog(this,"MSSV: ","NHẬP MSSV",1);
            LopDssvId Id=new LopDssvId(MaLop,MaMon,MSSV);
            if (LOPDSSVDAO.find(Id)!=null)
            {
               int DiemGK=Integer.valueOf(JOptionPane.showInputDialog(this,"NHẬP ĐIỂM GK:","NHẬP ĐIỂM",1));
               int DiemCK=Integer.valueOf(JOptionPane.showInputDialog(this,"NHẬP ĐIỂM CK:","NHẬP ĐIỂM",1));
               int DiemKhac=Integer.valueOf(JOptionPane.showInputDialog(this,"NHẬP ĐIỂM KHÁC:","NHẬP ĐIỂM",1));
               double DiemTong=Double.valueOf(JOptionPane.showInputDialog(this,"NHẬP ĐIỂM TỔNG:","NHẬP ĐIỂM",1));
               LopDssv lopdssv=new LopDssv(Id,DiemGK,DiemCK,DiemKhac,DiemTong);
               LOPDSSVDAO lopdssvdao=new LOPDSSVDAO();
               boolean kq=lopdssvdao.updateLOPDSSV(lopdssv);
               JOptionPane.showMessageDialog(this, "Sữa điểm thành công","THÔNG BÁO",1);
               
            }
            else
            JOptionPane.showMessageDialog(this, "MSSV không tồn tại hoặc sinh viên không học môn này","LỖI",2);
           
        }
        else JOptionPane.showMessageDialog(this, "LỚP KHÔNG TỒN TẠI","LỖI",2);
    }//GEN-LAST:event_SuaDiem_ButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(giaovu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(giaovu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(giaovu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(giaovu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new giaovu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DK_Button;
    private javax.swing.JButton DSLop_Button;
    private javax.swing.JButton DS_LopMon;
    private javax.swing.JButton Diem_Button;
    private javax.swing.JButton Huy_Button;
    private javax.swing.JButton Import_DSSV;
    private javax.swing.JButton Import_Diem;
    private javax.swing.JButton Import_TKB;
    private javax.swing.JButton SuaDiem_Button;
    private javax.swing.JButton TKB;
    private javax.swing.JButton addSV;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
